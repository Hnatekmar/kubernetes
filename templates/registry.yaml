apiVersion: v1
kind: Namespace
metadata:
  name: registry
#@ for registry in ["docker.io", "quay.io", "ghcr.io", "gcr.io"]:
#@ sanitized_name = registry.replace(".", "-")
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: #@ "docker-registry-config-" + sanitized_name
  namespace: registry
data:
  config.yml:
    version: 0.1
    compression:
      enabled: true
    http:
      addr: 0.0.0.0:5000
      debug:
        addr: 0.0.0.0:5001
    proxy:
      remoteurl: #@ "https://" + registry
    storage:
      s3:
        region: us-east-1
        endpoint: minio-console.minio.svc.cluster.local:9001
        rootdirectory: #@ "docker-registry/" + registry
        secure: false
        bucket: docker-mirror
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: registry
  name: #@ "registry-" + sanitized_name
  labels:
    app: #@ "registry-" + sanitized_name
spec:
  replicas: 1
  selector:
    matchLabels:
      app: #@ "registry-" + sanitized_name
  template:
    metadata:
      name: #@ "registry-" + sanitized_name
      labels:
        app: #@ "registry-" + sanitized_name
    spec:
      volumes:
        - name: config
          configMap:
            name: #@ "docker-registry-config-" + sanitized_name
            items:
              - key: config.yml
                path: config.yml
      containers:
        - name: registry
          image: registry:2
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /etc/distribution
              name: config
          command:
            - /bin/sh
          args:
            - -c
            - registry serve /etc/distribution/config.yml
          envFrom:
            - secretRef:
                name: minio-secret
          ports:
            - containerPort: 5000
              protocol: TCP
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  namespace: registry
  name: #@ "registry-" + sanitized_name
spec:
  selector:
    app: #@ "registry-" + sanitized_name
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: registry
  name: #@ "registry-" + sanitized_name
spec:
  ingressClassName: kong
  rules:
    - host: #@ "mirror-" + sanitized_name + ".hnatekmar.xyz"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: #@ "registry-" + sanitized_name
                port:
                  number: 5000
#@ end